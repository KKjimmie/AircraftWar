@startuml
'https://plantuml.com/class-diagram

abstract class AbstractFlyingObject
{
    # int locationX
    # int locationY
    # int speedX
    # int speedY
    # BufferedImage image
    # int width
    # int height
    # boolean isValid

    + AbstractFlyingObject(int locationX, int locationY, int speedX, int speedY)
    + forward():void
    + crash(FlyingObject flyingObject):boolean
    + setLocation(double locationX, double locationY):void
    + getLocationX():int
    + getLocationY():int
    + getSpeedY():int
    + getImage():BufferedImage
    + getWidth():int
    + getHeight():int
    + notValid():boolean
    + vanish():void
}
abstract class AbstractAircraft
{
	# int maxHp
    # int hp
    + AbstractAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + decreaseHp(int decrease):void
    + getHp():int
    + getMaxHp:int
    + shoot():List<BaseBullet>
 }

abstract class BaseBullet
{
    - int power
    + Bullet(int locationX, int locationY, int speedX, int speedY, int power)
    + forward():void
	+ getPower():int
}

abstract class AbstractProp
{
    # int bounceNum
    + AbstractProp(int locationX, int locationY, int speedX, int speedY)
    + work(HeroAircraft heroAircraft):void
    + forward():void
}

AbstractFlyingObject <|-- AbstractAircraft
AbstractFlyingObject <|-- BaseBullet
AbstractFlyingObject <|-- AbstractProp

AbstractAircraft <|-- HeroAircraft
AbstractAircraft <|-- MobEnemy
AbstractAircraft <|-- EliteEnemy
AbstractAircraft <|-- Boss

BaseBullet <|-- HeroBullet
BaseBullet <|-- EnemyBullet

AbstractProp <|-- BloodProp
AbstractProp <|-- BombProp
AbstractProp <|-- BulletProp

class HeroAircraft {
    - int shootNum
    - int power
    - int direction
    + HeroAircraft(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + setShootNum(int num):void
}

class MobEnemy {
    + MobEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
}

class EliteEnemy {
    - int power
    - int direction
    - BloodPropFactory bloodPropFactory
    - BombPropFactory bombPropFactory
    - BulletPropFactory bulletPropFactory
    + EliteEnemy(int locationX, int locationY, int speedX, int speedY, int hp)
    + forward():void
    + shoot():List<BaseBullet>
    + genProp():AbstractProp
}

class Boss {
    - int shootNum
    - int power
    - int direction
    - BloodPropFactory bloodPropFactory
    - BombPropFactory bombPropFactory
    - BulletPropFactory bulletPropFactory
    + Boss(int locationX, int locationY, int speedX, int speedY, int hp)
    + genProp():AbstractProp
    + shoot():List<BaseBullet>
}

class HeroBullet {
    + HeroBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class EnemyBullet {
    + EnemyBullet(int locationX, int locationY,
     int speedX, int speedY, int power)
}

class BloodProp {
    - int plusHp
    + BloodProp(int locationX, int locationY, int speedX, int speedY)
    + work(HeroAircraft heroAircraft):void
}

class BombProp {
    - String message
    + BombProp(int locationX, int locationY, int speedX, int speedY)
    + work(HeroAircraft heroAircraft):void
    + boom(List<AbstractAircraft> enemyAircrafts):void
}

class BulletProp{
    - String message
    - int bulletNumAdd
    + BulletProp(int locationX, int locationY, int speedX, int speedY)
    + work(HeroAircraft heroAircraft):void
}



@enduml